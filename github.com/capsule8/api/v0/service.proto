// Copyright 2017 Capsule8 Inc. All rights reserved.

syntax = "proto3";

package capsule8.api.v0;
option go_package = "v0";

import "google/api/annotations.proto";

//
// Capsule8 Pubsub API
//
// The Pubsub API is used by capsulators to publish and subscribe to typed messages
// for well defined topic names. Arbitrary types can be sent over non well defined topics.
//
service PubsubService {
    // Publishes messages to a topic
    rpc Publish(PublishRequest) returns (PublishResponse) {
        option (google.api.http) = {
            post: "/v0/topic/{topic}"
            body: "*"
        };
    }
    // Pulls messages off of a topic
    rpc Pull(PullRequest) returns (stream PullResponse) {
        option (google.api.http) = { 
            get: "/v0/topic/{topic}"
        };
    }
    rpc Acknowledge(AcknowledgeRequest) returns (AcknowledgeResponse) {
        option (google.api.http) = {
            post: "/v0/ack"
            body: "*"
        };
    }
}

// Publishes a message to topic
message PublishRequest {
    string topic = 1;
    // Can publish one or more message(s) at a time
    repeated bytes messages = 2;
}

// PublishResponse returns any failed messages
message PublishResponse {
    repeated FailedMessage failed_messages = 1;
}

message FailedMessage {
    bytes payload = 1;
    string error = 2;
}

// Pull messages off a topic
message PullRequest {
    // Must be set on first request and omitted in subsequent requests
    string topic = 1;
    // Optional, timeout in milliseconds
    int64 timeout = 2;
}

message PullResponse {
    repeated ReceivedMessage messages = 1;
}

message ReceivedMessage {
    bytes ack = 1; // Optional

    bytes payload = 2;
    // Optional, timestamp that the pubsub backend received the message
    // NOTE: some pubsub backends do not support timestamps in the messaging protocol (ie. NATS)
    int64 publish_time = 3;
}

message AcknowledgeRequest {
    repeated bytes acks = 1;
}

message AcknowledgeResponse {
    repeated bytes failed_acks = 1;
}
