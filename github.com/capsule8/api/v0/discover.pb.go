// Code generated by protoc-gen-go. DO NOT EDIT.
// source: capsule8/api/v0/discover.proto

package v0

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Discover struct {
	// Types that are valid to be assigned to Info:
	//	*Discover_Sensor
	Info isDiscover_Info `protobuf_oneof:"info"`
}

func (m *Discover) Reset()                    { *m = Discover{} }
func (m *Discover) String() string            { return proto.CompactTextString(m) }
func (*Discover) ProtoMessage()               {}
func (*Discover) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

type isDiscover_Info interface {
	isDiscover_Info()
}

type Discover_Sensor struct {
	Sensor *Sensor `protobuf:"bytes,3,opt,name=sensor,oneof"`
}

func (*Discover_Sensor) isDiscover_Info() {}

func (m *Discover) GetInfo() isDiscover_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Discover) GetSensor() *Sensor {
	if x, ok := m.GetInfo().(*Discover_Sensor); ok {
		return x.Sensor
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Discover) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Discover_OneofMarshaler, _Discover_OneofUnmarshaler, _Discover_OneofSizer, []interface{}{
		(*Discover_Sensor)(nil),
	}
}

func _Discover_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Discover)
	// info
	switch x := m.Info.(type) {
	case *Discover_Sensor:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sensor); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Discover.Info has unexpected type %T", x)
	}
	return nil
}

func _Discover_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Discover)
	switch tag {
	case 3: // info.sensor
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Sensor)
		err := b.DecodeMessage(msg)
		m.Info = &Discover_Sensor{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Discover_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Discover)
	// info
	switch x := m.Info.(type) {
	case *Discover_Sensor:
		s := proto.Size(x.Sensor)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Discover)(nil), "capsule8.api.v0.Discover")
}

func init() { proto.RegisterFile("capsule8/api/v0/discover.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 142 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4b, 0x4e, 0x2c, 0x28,
	0x2e, 0xcd, 0x49, 0xb5, 0xd0, 0x4f, 0x2c, 0xc8, 0xd4, 0x2f, 0x33, 0xd0, 0x4f, 0xc9, 0x2c, 0x4e,
	0xce, 0x2f, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x87, 0xc9, 0xeb, 0x25,
	0x16, 0x64, 0xea, 0x95, 0x19, 0x48, 0xc9, 0xa0, 0x6b, 0x28, 0x4e, 0xcd, 0x2b, 0xce, 0x87, 0x2a,
	0x57, 0x72, 0xe5, 0xe2, 0x70, 0x81, 0x1a, 0x20, 0x64, 0xc8, 0xc5, 0x06, 0x91, 0x93, 0x60, 0x56,
	0x60, 0xd4, 0xe0, 0x36, 0x12, 0xd7, 0x43, 0x33, 0x4b, 0x2f, 0x18, 0x2c, 0xed, 0xc1, 0x10, 0x04,
	0x55, 0xe8, 0xc4, 0xc6, 0xc5, 0x92, 0x99, 0x97, 0x96, 0xef, 0x24, 0x13, 0x25, 0x95, 0x9e, 0x59,
	0x92, 0x51, 0x9a, 0xa4, 0x97, 0x9c, 0x9f, 0xab, 0x8f, 0x66, 0x63, 0x12, 0x1b, 0xd8, 0x2e, 0x63,
	0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x9c, 0xe4, 0x0e, 0xbc, 0x00, 0x00, 0x00,
}
